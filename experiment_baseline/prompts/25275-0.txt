
1. **Informal Theorem**  
Boolean Not Equal to False is Equivalent to True: \( b \neq \text{false} \leftrightarrow b = \text{true} \) : For any boolean value \( b \), \( b \neq \text{false} \) if and only if \( b = \text{true} \).

2. **Informal Proof**  
We need to show that for any boolean value \( b \), the statement \( b \neq \text{false} \) is equivalent to \( b = \text{true} \).

1. **(\( \Rightarrow \)) Assume \( b \neq \text{false} \):**
- Since \( b \) is a boolean value, it can only be either \( \text{true} \) or \( \text{false} \).
- If \( b \neq \text{false} \), then \( b \) must be \( \text{true} \).

2. **(\( \Leftarrow \)) Assume \( b = \text{true} \):**
- If \( b = \text{true} \), then \( b \) is not equal to \( \text{false} \), i.e., \( b \neq \text{false} \).

Since both directions are proven, we conclude that for any boolean value \( b \), \( b \neq \text{false} \) if and only if \( b = \text{true} \). This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example : {b : Bool} → b ≠ false ↔ b = true := by sorry

4. **Prefix**
import Init.BinderPredicates
import Init.Data.Bool

open Bool


example : {b : Bool} → b ≠ false ↔ b = true := by
