
1. **Informal Theorem**  
Commutativity of Maximum Operation in Natural Numbers: \(\max(a, b) = \max(b, a)\) : For any natural numbers \(a\) and \(b\), the maximum of \(a\) and \(b\) is equal to the maximum of \(b\) and \(a\), i.e., \(\max(a, b) = \max(b, a)\).

2. **Informal Proof**  
We start by using the definition of the maximum function in a linear order. The maximum of \(a\) and \(b\) is defined as:
\[
\max(a, b) = \begin{cases}
b & \text{if } a \leq b \\
a & \text{if } a > b
\end{cases}
\]
Similarly, the maximum of \(b\) and \(a\) is:
\[
\max(b, a) = \begin{cases}
a & \text{if } b \leq a \\
b & \text{if } b > a
\end{cases}
\]
Thus, the goal \(\max(a, b) = \max(b, a)\) is equivalent to:
\[
(\text{if } a \leq b \text{ then } b \text{ else } a) = (\text{if } b \leq a \text{ then } a \text{ else } b)
\]

We consider two cases for \(a \leq b\) and \(b \leq a\):

1. **Case 1:** Assume \(a \leq b\).
- **Subcase 1.1:** Assume \(b \leq a\).
- Using the antisymmetry property of the less than or equal to relation, if \(a \leq b\) and \(b \leq a\), then \(a = b\). Therefore, the goal simplifies to \(b = a\), which is true.
- **Subcase 1.2:** Assume \(\neg (b \leq a)\).
- Since \(a \leq b\) and \(\neg (b \leq a)\), the goal simplifies to \(b = b\), which is trivially true.

2. **Case 2:** Assume \(\neg (a \leq b)\).
- **Subcase 2.1:** Assume \(b \leq a\).
- Since \(\neg (a \leq b)\) and \(b \leq a\), the goal simplifies to \(a = a\), which is trivially true.
- **Subcase 2.2:** Assume \(\neg (b \leq a)\).
- Since \(\neg (a \leq b)\) and \(\neg (b \leq a)\), we have a contradiction because the totality of the less than or equal to relation implies that either \(a \leq b\) or \(b \leq a\) must hold. Therefore, this subcase is impossible, and the goal simplifies to \(a = b\).

In all cases, the goal \(\max(a, b) = \max(b, a)\) is satisfied. Therefore, the theorem is proved. \(\blacksquare\)

3. **Formal Theorem**  
example (a b : Nat) : max a b = max b a := by sorry

4. **Prefix**
import Init.ByCases
import Init.Data.Nat.MinMax

open Nat


example (a b : Nat) : max a b = max b a := by
