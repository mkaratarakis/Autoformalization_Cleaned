Below are the error message and proof state for the proof you generated. Please revise the proof accordingly starting with new prefix. DO NOT include backticks, explanations, comments, code fences or any other text before or after the proof.
6. **Error Message and Proof State**
tmp.lean:15:6: error: tactic 'rfl' failed, the left-hand side
  ↑(quadraticCharFun (ZMod 2) ↑a)
is not definitionally equal to the right-hand side
  ↑a
case pos
p : ℕ
inst✝¹ : Fact (Nat.Prime p)
a : ℤ
inst✝ : Fact (Nat.Prime 2)
ha : a ≡ 0 [ZMOD 2]
⊢ ↑(quadraticCharFun (ZMod 2) ↑a) = ↑a
tmp.lean:20:8: error: no goals to be solved
tmp.lean:22:6: error: unsolved goals
case neg
p : ℕ
inst✝¹ : Fact (Nat.Prime p)
a : ℤ
inst✝ : Fact (Nat.Prime 2)
ha : ¬a ≡ 0 [ZMOD 2]
ha' : a ≠ 0
⊢ 1 = ↑a
tmp.lean:23:8: error: type mismatch
  ha'
has type
  a ≠ 0 : Prop
but is expected to have type
  ringChar (ZMod 2) = 2 : Prop
tmp.lean:24:8: error: type mismatch
  of_decide_eq_true (id (Eq.refl true))
has type
  2 ≠ 0 : Prop
but is expected to have type
  ↑a ≠ 0 : Prop
tmp.lean:28:27: error: tactic 'rewrite' failed, did not find instance of the pattern in the target expression
  ↑?m.4383 = ↑?m.4384
p✝ : ℕ
inst✝¹ : Fact (Nat.Prime p✝)
p : ℕ
inst✝ : Fact (Nat.Prime p)
a : ℤ
hp2 : ¬p = 2
h : p = 2
⊢ p = 2
tmp.lean:31:6: error: simp made no progress
tmp.lean:35:12: error: tactic 'rewrite' failed, did not find instance of the pattern in the target expression
  ↑a
p✝ : ℕ
inst✝¹ : Fact (Nat.Prime p✝)
p : ℕ
inst✝ : Fact (Nat.Prime p)
a : ℤ
hp2 : ¬p = 2
hodd : ringChar (ZMod p) ≠ 2
ha : ¬a ≡ 0 [ZMOD ↑p]
h : ↑a = 0
⊢ a ≡ 0 [ZMOD ↑p]
tmp.lean:38:8: error: type mismatch
  Eq.symm (ZMod.cast_one ?m.5482)
has type
  1 = ZMod.cast 1 : Prop
but is expected to have type
  ↑(if ↑a ^ (Fintype.card (ZMod p) / 2) = 1 then 1 else -1) = ↑a ^ (p / 2) : Prop
tmp.lean:39:6: error: no goals to be solved
tmp.lean:14:4: error: unsolved goals
case pos
p : ℕ
inst✝¹ : Fact (Nat.Prime p)
a : ℤ
inst✝ : Fact (Nat.Prime 2)
ha : a ≡ 0 [ZMOD 2]
⊢ ↑(quadraticCharFun (ZMod 2) ↑a) = ↑a
tmp.lean:12:2: error: unsolved goals
case neg
p : ℕ
inst✝¹ : Fact (Nat.Prime p)
a : ℤ
inst✝ : Fact (Nat.Prime 2)
ha : ¬a ≡ 0 [ZMOD 2]
⊢ ↑(legendreSym 2 a) = ↑a ^ (2 / 2)
tmp.lean:10:73: error: unsolved goals
case neg
p✝ : ℕ
inst✝¹ : Fact (Nat.Prime p✝)
p : ℕ
inst✝ : Fact (Nat.Prime p)
a : ℤ
hp2 : ¬p = 2
⊢ ↑(legendreSym p a) = ↑a ^ (p / 2)
case neg
p : ℕ
inst✝¹ : Fact (Nat.Prime p)
a : ℤ
inst✝ : Fact (Nat.Prime 2)
ha : ¬a ≡ 0 [ZMOD 2]
⊢ ↑(legendreSym 2 a) = ↑a ^ (2 / 2)

4. **New Prefix**  
   The initial Lean 4 code that you must build on.
import Mathlib.NumberTheory.LegendreSymbol.QuadraticChar.Basic
import Mathlib.NumberTheory.LegendreSymbol.Basic

open legendreSym
open Nat
variable (p : ℕ) [Fact p.Prime]
open ZMod
variable (p : ℕ) [Fact p.Prime]

example (a : ℤ) : (legendreSym p a : ZMod p) = (a : ZMod p) ^ (p / 2) := by
  by_cases hp2 : p = 2
  · subst hp2
    by_cases ha : a ≡ 0 [ZMOD 2]
    · simp [ha, legendreSym]
