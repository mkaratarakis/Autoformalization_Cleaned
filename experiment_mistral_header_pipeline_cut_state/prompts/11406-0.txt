
1. **Informal Theorem**  
Greatest Common Divisor of Product and Factor: \(\gcd(n \cdot m, n) = n\) : For any natural numbers \( m \) and \( n \), the greatest common divisor of \( n \cdot m \) and \( n \) is equal to \( n \), i.e., \(\gcd(n \cdot m, n) = n\).

2. **Informal Proof**  
To prove that \(\gcd(n \cdot m, n) = n\), we start by using the commutativity of multiplication, which states that \( n \cdot m = m \cdot n \). Therefore, the goal \((n \cdot m).gcd n = n\) can be rewritten as \((m \cdot n).gcd n = n\).

Next, we apply the identity that the greatest common divisor of \( m \cdot n \) and \( n \) is equal to \( n \), i.e., \(\gcd(m \cdot n, n) = n\). This identity directly simplifies our goal to \( n = n \), which is trivially true.

Thus, we have shown that \(\gcd(n \cdot m, n) = n\). This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example (m n : Nat) : gcd (n * m) n = n := by sorry

4. **Prefix**
import Init.Data.Nat.Dvd
import Init.NotationExtra
import Init.RCases
import Init.Data.Nat.Gcd

open Nat


example (m n : Nat) : gcd (n * m) n = n := by

5. **Header Information**  
-- Init.Data.Nat.Dvd not found. --

-- Init.NotationExtra not found. --

-- Init.RCases not found. --

-- Init.Data.Nat.Gcd not found. --

