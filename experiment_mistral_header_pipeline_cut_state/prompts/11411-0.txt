
1. **Informal Theorem**  
GCD Identity: \(\gcd(n, m \cdot n) = n\) : For any natural numbers \( m \) and \( n \), the greatest common divisor of \( n \) and \( m \cdot n \) is equal to \( n \), i.e., \(\gcd(n, m \cdot n) = n\).

2. **Informal Proof**  
To prove that \(\gcd(n, m \cdot n) = n\) for any natural numbers \( m \) and \( n \), we start by using the commutativity property of the greatest common divisor. The commutativity property states that for any elements \(a\) and \(b\) in a normalized GCD monoid, \(\gcd(a, b) = \gcd(b, a)\). Applying this property, we can rewrite \(\gcd(n, m \cdot n)\) as \(\gcd(m \cdot n, n)\).

Next, we use the identity \(\gcd(m \cdot n, n) = n\), which holds for any natural numbers \(m\) and \(n\). This identity tells us that the greatest common divisor of \(m \cdot n\) and \(n\) is \(n\).

Therefore, the original goal \(\gcd(n, m \cdot n) = n\) is equivalent to \(n = n\), which is trivially true. This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example (m n : Nat) : gcd n (m * n) = n := by sorry

4. **Prefix**
import Init.Data.Nat.Dvd
import Init.NotationExtra
import Init.RCases
import Init.Data.Nat.Gcd

open Nat


example (m n : Nat) : gcd n (m * n) = n := by

5. **Header Information**  
-- Init.Data.Nat.Dvd not found. --

-- Init.NotationExtra not found. --

-- Init.RCases not found. --

-- Init.Data.Nat.Gcd not found. --

