
1. **Informal Theorem**  
Range Subset Condition: \( \text{List.range } m \subseteq \text{List.range } n \leftrightarrow m \leq n \) : For any natural numbers \( m \) and \( n \), the list `List.range m` is a subset of the list `List.range n` if and only if \( m \leq n \). In other words, the list of natural numbers from \( 0 \) to \( m-1 \) is a subset of the list of natural numbers from \( 0 \) to \( n-1 \) if and only if \( m \) is less than or equal to \( n \).

2. **Informal Proof**  
To prove the theorem, we start by using the fact that the list `List.range n` is equal to the list `List.range' 0 n`. This means that the list of natural numbers from \( 0 \) to \( n-1 \) is the same as the list generated by `List.range' 0 n`.

Next, we use the property that `List.range' 0 m` is a subset of `List.range' 0 n` if and only if \( m \leq n \). This property tells us that the list of natural numbers from \( 0 \) to \( m-1 \) is a subset of the list of natural numbers from \( 0 \) to \( n-1 \) if and only if \( m \) is less than or equal to \( n \).

Finally, we use the property that \( m \leq n \) is equivalent to \( m < n + 1 \). This is a standard property of the natural numbers, stating that \( m \) is less than or equal to \( n \) if and only if \( m \) is strictly less than \( n + 1 \).

Combining these properties, we can simplify the original proposition to the desired result. Therefore, the list `List.range m` is a subset of the list `List.range n` if and only if \( m \leq n \). This completes the proof.

3. **Formal Theorem**  
example {m n : Nat} : range m ⊆ range n ↔ m ≤ n := by sorry

4. **Prefix**
import Init.Data.List.Nat.TakeDrop
import Init.Data.List.Pairwise
import Init.Data.List.Nat.Range

open List
open Nat

example {m n : Nat} : range m ⊆ range n ↔ m ≤ n := by

5. **Header Information**  
-- Init.Data.List.Nat.TakeDrop not found. --

-- Init.Data.List.Pairwise not found. --

-- Init.Data.List.Nat.Range not found. --

