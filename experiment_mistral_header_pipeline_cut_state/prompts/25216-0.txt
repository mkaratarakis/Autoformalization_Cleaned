
1. **Informal Theorem**  
Optional Value with Default Equals a Value if and only if it is Some of that Value or None with Default Equal to the Value: $o.\text{getD} \, a = b \leftrightarrow o = \text{some} \, b \lor (o = \text{none} \land a = b)$ : For any type $\alpha$ and any optional value $o : \text{Option} \, \alpha$, and for any values $a, b : \alpha$, the following holds:
\[
o.\text{getD} \, a = b \quad \text{if and only if} \quad o = \text{some} \, b \quad \text{or} \quad o = \text{none} \quad \text{and} \quad a = b.
\]

2. **Informal Proof**  
We will consider every possible case of the optional value $o$.

1. **Case 1: $o = \text{none}$**
- We need to show that $o.\text{getD} \, a = b$ if and only if $\text{none} = \text{some} \, b \lor (\text{none} = \text{none} \land a = b)$.
- Simplifying the left-hand side, we have $o.\text{getD} \, a = a$.
- Simplifying the right-hand side, we have $\text{none} = \text{some} \, b \lor (\text{none} = \text{none} \land a = b)$.
- Since $\text{none} = \text{some} \, b$ is false, the right-hand side simplifies to $\text{none} = \text{none} \land a = b$, which is equivalent to $a = b$.
- Therefore, $o.\text{getD} \, a = b$ is equivalent to $a = b$.

2. **Case 2: $o = \text{some} \, val$ for some value $val \in \alpha$**
- We need to show that $(\text{some} \, val).\text{getD} \, a = b$ if and only if $\text{some} \, val = \text{some} \, b \lor (\text{some} \, val = \text{none} \land a = b)$.
- Simplifying the left-hand side, we have $(\text{some} \, val).\text{getD} \, a = val$.
- Simplifying the right-hand side, we have $\text{some} \, val = \text{some} \, b \lor (\text{some} \, val = \text{none} \land a = b)$.
- Since $\text{some} \, val = \text{none}$ is false, the right-hand side simplifies to $\text{some} \, val = \text{some} \, b$, which is equivalent to $val = b$.
- Therefore, $(\text{some} \, val).\text{getD} \, a = b$ is equivalent to $val = b$.

In both cases, the proposition holds. Therefore, the theorem is proved. $\blacksquare$

3. **Formal Theorem**  
example {o : Option α} {a b} : o.getD a = b ↔ (o = some b ∨ o = none ∧ a = b) := by sorry

4. **Prefix**
import Init.Data.Option.BasicAux
import Init.Data.Option.Instances
import Init.Classical
import Init.Ext
import Init.Data.Option.Lemmas

open Option


example {o : Option α} {a b} : o.getD a = b ↔ (o = some b ∨ o = none ∧ a = b) := by

5. **Header Information**  
-- Init.Data.Option.BasicAux not found. --

-- Init.Data.Option.Instances not found. --

-- Init.Classical not found. --

-- Init.Ext not found. --

-- Init.Data.Option.Lemmas not found. --

