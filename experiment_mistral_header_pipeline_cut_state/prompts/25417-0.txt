
1. **Informal Theorem**  
Negation of If-Then-Else Equals True is Equivalent to If-Then-Else Equals False : For any proposition \( p \) and boolean values \( b \) and \( c \), the negation of the if-then-else expression \( \text{if } p \text{ then } b = \text{true} \text{ else } c = \text{true} \) is logically equivalent to the if-then-else expression \( \text{if } p \text{ then } b = \text{false} \text{ else } c = \text{false} \). In other words, \( \neg (\text{if } p \text{ then } b = \text{true} \text{ else } c = \text{true}) \leftrightarrow (\text{if } p \text{ then } b = \text{false} \text{ else } c = \text{false}) \).

2. **Informal Proof**  
We will consider every possible case of the decidable proposition \( p \).

1. **Case 1: \( p \) is true.**
- In this case, the if-then-else expression \( \text{if } p \text{ then } b = \text{true} \text{ else } c = \text{true} \) simplifies to \( b = \text{true} \).
- The negation of this expression is \( \neg (b = \text{true}) \), which is equivalent to \( b = \text{false} \) by the property of boolean values.
- Therefore, the if-then-else expression \( \text{if } p \text{ then } b = \text{false} \text{ else } c = \text{false} \) simplifies to \( b = \text{false} \).
- Hence, \( \neg (\text{if } p \text{ then } b = \text{true} \text{ else } c = \text{true}) \) is equivalent to \( \text{if } p \text{ then } b = \text{false} \text{ else } c = \text{false} \).

2. **Case 2: \( p \) is false.**
- In this case, the if-then-else expression \( \text{if } p \text{ then } b = \text{true} \text{ else } c = \text{true} \) simplifies to \( c = \text{true} \).
- The negation of this expression is \( \neg (c = \text{true}) \), which is equivalent to \( c = \text{false} \) by the property of boolean values.
- Therefore, the if-then-else expression \( \text{if } p \text{ then } b = \text{false} \text{ else } c = \text{false} \) simplifies to \( c = \text{false} \).
- Hence, \( \neg (\text{if } p \text{ then } b = \text{true} \text{ else } c = \text{true}) \) is equivalent to \( \text{if } p \text{ then } b = \text{false} \text{ else } c = \text{false} \).

Since both cases show that the negation of the if-then-else expression \( \text{if } p \text{ then } b = \text{true} \text{ else } c = \text{true} \) is equivalent to the if-then-else expression \( \text{if } p \text{ then } b = \text{false} \text{ else } c = \text{false} \), the theorem is proved.

3. **Formal Theorem**  
example (p : Prop) [h : Decidable p] (b c : Bool) :
  ¬(ite p (b = true) (c = true)) ↔ (ite p (b = false) (c = false)) := by sorry

4. **Prefix**
import Init.BinderPredicates
import Init.Data.Bool

open Bool


example (p : Prop) [h : Decidable p] (b c : Bool) :
  ¬(ite p (b = true) (c = true)) ↔ (ite p (b = false) (c = false)) := by

5. **Header Information**  
-- Init.BinderPredicates not found. --

-- Init.Data.Bool not found. --

