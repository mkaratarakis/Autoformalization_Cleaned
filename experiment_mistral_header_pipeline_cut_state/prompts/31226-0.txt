
1. **Informal Theorem**  
Natural Number Equals Its Predecessor if and Only if It is Zero: \( n = n - 1 \leftrightarrow n = 0 \) : For any natural number \( n \), it holds that \( n = n - 1 \) if and only if \( n = 0 \).

2. **Informal Proof**  
We will consider every possible case of \( n \).

1. **Case 1: \( n = 0 \)**
- We need to show that \( 0 = 0 - 1 \leftrightarrow 0 = 0 \).
- Simplifying the left-hand side, we get \( 0 = 0 - 1 \), which is equivalent to \( 0 = 0 \) since \( 0 - 1 = 0 \) is false. Therefore, the left-hand side is false.
- The right-hand side is \( 0 = 0 \), which is true.
- Since both sides are equivalent to the same truth value (false on the left and true on the right), the equivalence holds.

2. **Case 2: \( n = k + 1 \) for some \( k \in \mathbb{N} \)**
- We need to show that \( k + 1 = (k + 1) - 1 \leftrightarrow k + 1 = 0 \).
- Simplifying the left-hand side, we get \( k + 1 = k \), which is false for any \( k \in \mathbb{N} \).
- The right-hand side is \( k + 1 = 0 \), which is also false for any \( k \in \mathbb{N} \).
- Since both sides are equivalent to the same truth value (false on both sides), the equivalence holds.

Therefore, for any natural number \( n \), \( n = n - 1 \) if and only if \( n = 0 \). This completes the proof.

3. **Formal Theorem**  
example (n : Nat) : n = n - 1 ↔ n = 0 := by sorry

4. **Prefix**
import Init.SimpLemmas
import Init.Data.Nat.Basic

open Nat


example (n : Nat) : n = n - 1 ↔ n = 0 := by

5. **Header Information**  
-- Init.SimpLemmas not found. --

-- Init.Data.Nat.Basic not found. --

