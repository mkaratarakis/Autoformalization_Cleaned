Below are the error message and proof state for the proof you generated. Please revise the proof accordingly starting with new prefix. DO NOT include backticks, explanations, comments, code fences or any other text before or after the proof.
6. **Error Message and Proof State**
tmp.lean:11:28: error: application type mismatch
  add_mul_div_right H
argument
  H
has type
  0 < n : Prop
but is expected to have type
  Nat : Type
tmp.lean:9:59: error: unsolved goals
m n : Nat
H : 0 < n
⊢ (0 + m * n) / n = m
tmp.lean:9:59: error: unsolved goals
m n : Nat
H : 0 < n
⊢ (0 + m * n) / n = m
m n : Nat
H : 0 < n
⊢ (0 + m * n) / n = m

4. **New Prefix**  
   The initial Lean 4 code that you must build on.
import Init.WF
import Init.WFTactics
import Init.Data.Nat.Basic
import Init.Data.Nat.Div

open Nat


example (m : Nat) {n : Nat} (H : 0 < n) : m * n / n = m := by
  rw [← Nat.zero_add (m * n)]
