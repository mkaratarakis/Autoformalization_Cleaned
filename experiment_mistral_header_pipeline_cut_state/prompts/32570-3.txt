Below are the error message and proof state for the proof you generated. Please revise the proof accordingly starting with new prefix. DO NOT include backticks, explanations, comments, code fences or any other text before or after the proof.
6. **Error Message and Proof State**
tmp.lean:9:4: error: type mismatch
  if_pos rfl
has type
  (if ?m.82 = ?m.82 then ?m.84 else ?m.85) = ?m.84 : Prop
but is expected to have type
  (if c then a else a) = a : Prop
tmp.lean:10:17: error: application type mismatch
  @if_neg ?m.186 ?m.187 rfl
argument
  rfl
has type
  ?m.190 = ?m.190 : Prop
but is expected to have type
  ¬?m.186 : Prop
tmp.lean:7:77: error: unsolved goals
case isFalse
α : Sort u
c : Prop
a : α
h✝ : ¬c
⊢ (if c then a else a) = a

case isTrue
α : Sort u
c : Prop
a : α
h✝ : c
⊢ (if c then a else a) = a
case isFalse
α : Sort u
c : Prop
a : α
h✝ : ¬c
⊢ (if c then a else a) = a

case isTrue
α : Sort u
c : Prop
a : α
h✝ : c
⊢ (if c then a else a) = a

4. **New Prefix**  
   The initial Lean 4 code that you must build on.
import Init.Core
import Init.SimpLemmas




example {α : Sort u} {c : Prop} {d : Decidable c} (a : α) : ite c a a = a := by
  cases d
