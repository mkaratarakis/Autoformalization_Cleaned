
1. **Informal Theorem**  
Dependent If-Then-Else Equals Some if and only if Proposition is True: \((\text{if } h : P \text{ then } \text{some } (x h) \text{ else } \text{none}) = \text{some } y \leftrightarrow \exists h, x(h) = y\) : For any proposition \( P \) and any type \( \alpha \), the dependent if-then-else expression \((\text{if } h : P \text{ then } \text{some } (x h) \text{ else } \text{none})\) is equal to \(\text{some } y\) if and only if there exists a proof \( h \) of \( P \) such that \( x(h) = y \).

2. **Informal Proof**  
We need to show that \((\text{if } h : P \text{ then } \text{some } (x h) \text{ else } \text{none}) = \text{some } y\) if and only if \(\exists h, x h = y\).

Consider two cases:

1. **Case 1: \( P \) holds.**
- Assume \( P \) holds, and let \( h \) be a proof of \( P \).
- The expression \((\text{if } h : P \text{ then } \text{some } (x h) \text{ else } \text{none})\) simplifies to \(\text{some } (x h)\).
- Therefore, the goal \((\text{if } h : P \text{ then } \text{some } (x h) \text{ else } \text{none}) = \text{some } y\) simplifies to \(\text{some } (x h) = \text{some } y\), which is equivalent to \( x h = y \).
- Hence, in this case, the goal is \(\exists h, x h = y\).

2. **Case 2: \( P \) does not hold.**
- Assume \( P \) does not hold, and let \( h \) be a proof of \(\neg P\).
- The expression \((\text{if } h : P \text{ then } \text{some } (x h) \text{ else } \text{none})\) simplifies to \(\text{none}\).
- Therefore, the goal \((\text{if } h : P \text{ then } \text{some } (x h) \text{ else } \text{none}) = \text{some } y\) simplifies to \(\text{none} = \text{some } y\), which is a contradiction.
- Hence, this case is vacuously true.

Combining both cases, we conclude that \((\text{if } h : P \text{ then } \text{some } (x h) \text{ else } \text{none}) = \text{some } y\) if and only if \(\exists h, x h = y\). This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example [Decidable P] {x : P → α} {y : α} :
    (if h : P then some (x h) else none) = some y ↔ ∃ h : P, x h = y := by sorry

4. **Prefix**
import Init.Classical
import Init.ByCases




example [Decidable P] {x : P → α} {y : α} :
    (if h : P then some (x h) else none) = some y ↔ ∃ h : P, x h = y := by

5. **Header Information**  
-- Init.Classical not found. --

-- Init.ByCases not found. --

