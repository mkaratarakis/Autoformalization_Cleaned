
1. **Informal Theorem**  
Predicate Satisfied by Element at Index Found by `List.findIdx` : For any list \( xs \) of elements of type \( \alpha \) and any predicate \( p : \alpha \to \text{Bool} \), if the optional element at the index returned by `List.findIdx p xs` is `some y`, then the predicate \( p \) evaluated at \( y \) is `true`. In other words, if \( \text{List.get? } xs \, (\text{List.findIdx } p \, xs) = \text{some } y \), then \( p(y) = \text{true} \).

2. **Informal Proof**  
We prove this by induction on the list \( xs \).

1. **Base Case: \( xs = [] \)**
- If \( xs \) is the empty list, then \( \text{List.get? } [] \, (\text{List.findIdx } p \, []) = \text{none} \). Therefore, the assumption \( \text{List.get? } [] \, (\text{List.findIdx } p \, []) = \text{some } y \) is impossible, and the goal \( p(y) = \text{true} \) is vacuously true.

2. **Inductive Step: \( xs = x :: xs' \)**
- Consider the list \( xs = x :: xs' \). We split the proof into two cases based on whether the predicate \( p \) holds for the head element \( x \) of the list.

- **Case 1: \( p(x) = \text{true} \)**
- If \( p(x) = \text{true} \), then by the definition of `List.findIdx`, the index of the first element satisfying \( p \) in the list \( x :: xs' \) is \( 0 \). Therefore, \( \text{List.get? } (x :: xs') \, (\text{List.findIdx } p \, (x :: xs')) = \text{some } x \). Given the assumption \( \text{List.get? } (x :: xs') \, (\text{List.findIdx } p \, (x :: xs')) = \text{some } y \), it follows that \( y = x \). Since \( p(x) = \text{true} \), we have \( p(y) = \text{true} \).

- **Case 2: \( p(x) = \text{false} \)**
- If \( p(x) = \text{false} \), then by the definition of `List.findIdx`, the index of the first element satisfying \( p \) in the list \( x :: xs' \) is \( \text{List.findIdx } p \, xs' + 1 \). Therefore, \( \text{List.get? } (x :: xs') \, (\text{List.findIdx } p \, (x :: xs')) = \text{List.get? } xs' \, (\text{List.findIdx } p \, xs') \). Given the assumption \( \text{List.get? } (x :: xs') \, (\text{List.findIdx } p \, (x :: xs')) = \text{some } y \), it follows that \( \text{List.get? } xs' \, (\text{List.findIdx } p \, xs') = \text{some } y \). By the induction hypothesis, \( p(y) = \text{true} \).

Thus, in both cases, we have shown that \( p(y) = \text{true} \). This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example {xs : List α} (w : xs.get? (xs.findIdx p) = some y) : p y := by sorry

4. **Prefix**
import Init.Data.List.Lemmas
import Init.Data.List.Find

open List
open Nat

example {xs : List α} (w : xs.get? (xs.findIdx p) = some y) : p y := by

5. **Header Information**  
-- Init.Data.List.Lemmas not found. --

-- Init.Data.List.Find not found. --

