Below are the error message and proof state for the proof you generated. Please revise the proof accordingly starting with new prefix. DO NOT include backticks, explanations, comments, code fences or any other text before or after the proof.
6. **Error Message and Proof State**
tmp.lean:10:2: error: unsolved goals
case mp
α : Type u_1
p : α → Prop
inst✝ : DecidablePred p
l : List α
a : α
h : (l.any fun a => decide (p a)) = true
⊢ ∀ (a : α), a ∈ l ∧ p a → ∃ a, a ∈ l ∧ p a
tmp.lean:8:49: error: unsolved goals
case mpr
α : Type u_1
p : α → Prop
inst✝ : DecidablePred p
l : List α
a : α
⊢ (∃ a, a ∈ l ∧ p a) → (l.any fun a => decide (p a)) = true
tmp.lean:12:4: error: unexpected token '|'; expected command
tmp.lean:8:49: error: unsolved goals
case mp
α : Type u_1
p : α → Prop
inst✝ : DecidablePred p
l : List α
a : α
⊢ (l.any fun a => decide (p a)) = true → ∃ a, a ∈ l ∧ p a

case mpr
α : Type u_1
p : α → Prop
inst✝ : DecidablePred p
l : List α
a : α
⊢ (∃ a, a ∈ l ∧ p a) → (l.any fun a => decide (p a)) = true
case mp
α : Type u_1
p : α → Prop
inst✝ : DecidablePred p
l : List α
a : α
⊢ (l.any fun a => decide (p a)) = true → ∃ a, a ∈ l ∧ p a

case mpr
α : Type u_1
p : α → Prop
inst✝ : DecidablePred p
l : List α
a : α
⊢ (∃ a, a ∈ l ∧ p a) → (l.any fun a => decide (p a)) = true

4. **New Prefix**  
   The initial Lean 4 code that you must build on.
import Batteries.Tactic.Alias
import Mathlib.Tactic.TypeStar
import Mathlib.Data.Bool.AllAny

open List
variable {α : Type*} {p : α → Prop} [DecidablePred p] {l : List α} {a : α}

example : (any l fun a => p a) ↔ ∃ a ∈ l, p a := by
  constructor
