Below are the error message and proof state for the proof you generated. Please revise the proof accordingly starting with new prefix. DO NOT include backticks, explanations, comments, code fences or any other text before or after the proof.
6. **Error Message and Proof State**
tmp.lean:14:2: error: simp made no progress
tmp.lean:10:120: error: unsolved goals
ctx : Context
p : Poly
k : Nat
m : Mon
⊢ denote ctx (mulMon.go k m p []) = denote ctx p * k * Mon.denote ctx m
ctx : Context
p : Poly
k : Nat
m : Mon
⊢ denote ctx (mulMon.go k m p []) = denote ctx p * k * Mon.denote ctx m

4. **New Prefix**  
   The initial Lean 4 code that you must build on.
import Init.Data.Nat.Linear
import Init.Data.List.BasicAux
import Init.Data.Nat.SOM

open Nat
open SOM
open Poly
open Linear (Var hugeFuel Context Var.denote)

example (ctx : Context) (p : Poly) (k : Nat) (m : Mon) : (p.mulMon k m).denote ctx = p.denote ctx * k * m.denote ctx := by
  -- Apply the definition of `mulMon`
  unfold mulMon
  -- Simplify the goal using the definition of `denote`
