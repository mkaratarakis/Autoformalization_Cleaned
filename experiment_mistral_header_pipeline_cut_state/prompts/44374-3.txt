Below are the error message and proof state for the proof you generated. Please revise the proof accordingly starting with new prefix. DO NOT include backticks, explanations, comments, code fences or any other text before or after the proof.
6. **Error Message and Proof State**
tmp.lean:17:21: error: unknown tactic
tmp.lean:11:10: error: unknown identifier 'mul_pos'
tmp.lean:12:4: error: no goals to be solved
tmp.lean:16:43: error: unknown identifier 'add_mul'
tmp.lean:16:35: error: unsolved goals
a b c : Int
h₁ : a < b
h₂ : 0 < c
h : 0 < c * (b - a)
⊢ c * b = c * a + c * (b - a)
tmp.lean:17:17: error: unsolved goals
a b c : Int
h₁ : a < b
h₂ : 0 < c
h : 0 < c * (b - a)
⊢ c * a + c * (b - a) > c * a
tmp.lean:18:0: error: unexpected end of input; expected ':='
tmp.lean:11:10: error: unknown identifier 'mul_pos'
tmp.lean:12:4: error: no goals to be solved
tmp.lean:17:4: error: unknown identifier 'trace_state'

4. **New Prefix**  
   The initial Lean 4 code that you must build on.
import Init.Data.Int.Lemmas
import Init.ByCases
import Init.Data.Int.Order

open Int
open Nat

example {a b c : Int}
  (h₁ : a < b) (h₂ : 0 < c) : c * a < c * b := by
  have h : 0 < c * (b - a) := by
    apply mul_pos
    · exact h₂
    · apply sub_pos_of_lt
      exact h₁
  calc
    c * b = c * a + c * (b - a) := by rw [←add_mul, mul_sub]
