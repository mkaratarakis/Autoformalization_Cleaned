
1. **Informal Theorem**  
Subtraction and Addition Inequality: \(a + b \leq c \to b \leq c - a\) : For any integers \(a\), \(b\), and \(c\), if \(a + b \leq c\), then \(b \leq c - a\).

2. **Informal Proof**  
We start with the given inequality \(a + b \leq c\). To prove that \(b \leq c - a\), we first use the property that adding the same integer to both sides of an inequality preserves the inequality. Specifically, adding \(-a\) to both sides of \(a + b \leq c\) gives:
\[
a + b + (-a) \leq c + (-a).
\]
Next, we use the commutativity of addition to rewrite the left-hand side:
\[
b + a + (-a) \leq c + (-a).
\]
Then, we use the property that adding an integer and its negation results in the original integer:
\[
b \leq c + (-a).
\]
Since \(c + (-a)\) is the same as \(c - a\), we have:
\[
b \leq c - a.
\]
Thus, we have shown that if \(a + b \leq c\), then \(b \leq c - a\). This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example {a b c : Int} (h : a + b ≤ c) : b ≤ c - a := by sorry

4. **Prefix**
import Init.Data.Int.Lemmas
import Init.ByCases
import Init.Data.Int.Order

open Int
open Nat

example {a b c : Int} (h : a + b ≤ c) : b ≤ c - a := by

5. **Header Information**  
-- Init.Data.Int.Lemmas not found. --

-- Init.ByCases not found. --

-- Init.Data.Int.Order not found. --

