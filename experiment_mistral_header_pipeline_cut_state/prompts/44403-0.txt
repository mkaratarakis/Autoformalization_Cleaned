
1. **Informal Theorem**  
Subtraction and Addition Inequality: \(a - c \leq b \to a \leq b + c\) : For any integers \(a\), \(b\), and \(c\), if \(a - c \leq b\), then \(a \leq b + c\).

2. **Informal Proof**  
We start with the given inequality \(a - c \leq b\). To prove that \(a \leq b + c\), we use the property that adding the same integer to both sides of an inequality preserves the inequality. Specifically, adding \(c\) to both sides of \(a - c \leq b\) gives us:
\[
a - c + c \leq b + c
\]
Next, we use the property that subtraction and addition cancel each other out in an additive group. This means that:
\[
a - c + c = a
\]
Thus, the inequality \(a - c + c \leq b + c\) simplifies to:
\[
a \leq b + c
\]
This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example {a b c : Int} (h : a - c ≤ b) : a ≤ b + c := by sorry

4. **Prefix**
import Init.Data.Int.Lemmas
import Init.ByCases
import Init.Data.Int.Order

open Int
open Nat

example {a b c : Int} (h : a - c ≤ b) : a ≤ b + c := by

5. **Header Information**  
-- Init.Data.Int.Lemmas not found. --

-- Init.ByCases not found. --

-- Init.Data.Int.Order not found. --

