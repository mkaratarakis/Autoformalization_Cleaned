
1. **Informal Theorem**  
Inequality Preservation by Addition and Negation: \(-b + a \leq c \to a \leq b + c\) : For any integers \(a\), \(b\), and \(c\), if the sum of \(-b\) and \(a\) is less than or equal to \(c\), then \(a\) is less than or equal to the sum of \(b\) and \(c\). In other words, \(-b + a \leq c\) implies \(a \leq b + c\).

2. **Informal Proof**  
We start with the assumption that \(-b + a \leq c\). By the commutativity of addition in the integers, we can rewrite this assumption as \(a + (-b) \leq c\).

Next, we use the theorem that states if \(a - b \leq c\), then \(a \leq b + c\). Since \(a + (-b) \leq c\) is equivalent to \(a - b \leq c\), this theorem directly applies. Therefore, we conclude that \(a \leq b + c\).

This completes the proof.

3. **Formal Theorem**  
example {a b c : Int} (h : -b + a ≤ c) : a ≤ b + c := by sorry

4. **Prefix**
import Init.Data.Int.Lemmas
import Init.ByCases
import Init.Data.Int.Order

open Int
open Nat

example {a b c : Int} (h : -b + a ≤ c) : a ≤ b + c := by

5. **Header Information**  
-- Init.Data.Int.Lemmas not found. --

-- Init.ByCases not found. --

-- Init.Data.Int.Order not found. --

