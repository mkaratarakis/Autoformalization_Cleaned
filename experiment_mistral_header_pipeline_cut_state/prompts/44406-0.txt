
1. **Informal Theorem**  
Addition Preserves Strict Inequality: \(b < -a + c \implies a + b < c\) : For any integers \(a, b, c\), if \(b < -a + c\), then \(a + b < c\).

2. **Informal Proof**  
We start with the given inequality \( b < -a + c \). To prove that \( a + b < c \), we use the property that adding the same element to both sides of a strict inequality preserves the inequality. Specifically, since \( b < -a + c \), we have:
\[
a + b < a + (-a + c)
\]
Next, we use the cancellation property of addition and negation in the integers, which states that \( a + (-a + b) = b \). Applying this property to our inequality, we get:
\[
a + b < c
\]
This is exactly the goal we need to prove. Therefore, we have shown that if \( b < -a + c \), then \( a + b < c \). This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example {a b c : Int} (h : b < -a + c) : a + b < c := by sorry

4. **Prefix**
import Init.Data.Int.Lemmas
import Init.ByCases
import Init.Data.Int.Order

open Int
open Nat

example {a b c : Int} (h : b < -a + c) : a + b < c := by

5. **Header Information**  
-- Init.Data.Int.Lemmas not found. --

-- Init.ByCases not found. --

-- Init.Data.Int.Order not found. --

