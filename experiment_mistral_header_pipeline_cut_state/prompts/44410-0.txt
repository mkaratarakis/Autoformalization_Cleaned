
1. **Informal Theorem**  
Inequality Preservation: \(a \le b + c \to -c + a \le b\) : For any integers \(a\), \(b\), and \(c\), if \(a \le b + c\), then \(-c + a \le b\).

2. **Informal Proof**  
We start with the assumption that \(a \le b + c\). By the commutativity of addition in the integers, we can rewrite \(b + c\) as \(c + b\). Therefore, the assumption \(a \le b + c\) is equivalent to \(a \le c + b\).

Next, we use the theorem that states for any integers \(a\), \(b\), and \(c\), if \(a \le c + b\), then \(-c + a \le b\). Since we have \(a \le c + b\) from the previous step, this theorem directly gives us \(-c + a \le b\).

Thus, we have shown that if \(a \le b + c\), then \(-c + a \le b\). This completes the proof.

3. **Formal Theorem**  
example {a b c : Int} (h : a ≤ b + c) : -c + a ≤ b := by sorry

4. **Prefix**
import Init.Data.Int.Lemmas
import Init.ByCases
import Init.Data.Int.Order

open Int
open Nat

example {a b c : Int} (h : a ≤ b + c) : -c + a ≤ b := by

5. **Header Information**  
-- Init.Data.Int.Lemmas not found. --

-- Init.ByCases not found. --

-- Init.Data.Int.Order not found. --

