
1. **Informal Theorem**  
Addition Preserves Strict Inequality: \(b < c - a \to a + b < c\) : For any integers \(a\), \(b\), and \(c\), if \(b < c - a\), then \(a + b < c\).

2. **Informal Proof**  
We start with the given inequality \( b < c - a \). To prove that \( a + b < c \), we use the property that adding the same integer to both sides of a strict inequality preserves the inequality. Specifically, since \( b < c - a \), it follows that:
\[ a + b < a + (c - a). \]

Next, we simplify the right-hand side of the inequality:
1. By the associativity of addition and subtraction, we have:
\[ a + (c - a) = a + c - a. \]
2. By the commutativity of addition, we can rewrite this as:
\[ a + c - a = c + a - a. \]
3. By the cancellation property of addition and subtraction, we get:
\[ c + a - a = c. \]

Thus, we have:
\[ a + b < c. \]

This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example {a b c : Int} (h : b < c - a) : a + b < c := by sorry

4. **Prefix**
import Init.Data.Int.Lemmas
import Init.ByCases
import Init.Data.Int.Order

open Int
open Nat

example {a b c : Int} (h : b < c - a) : a + b < c := by

5. **Header Information**  
-- Init.Data.Int.Lemmas not found. --

-- Init.ByCases not found. --

-- Init.Data.Int.Order not found. --

