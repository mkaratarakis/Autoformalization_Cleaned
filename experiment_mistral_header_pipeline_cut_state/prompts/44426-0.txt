
1. **Informal Theorem**  
Right Addition with Negation Preserves Strict Inequality in Integers : For any integers \(a\), \(b\), and \(c\), if \(a < b + c\), then \(-c + a < b\).

2. **Informal Proof**  
We start with the assumption that \(a < b + c\). By the commutativity of addition in integers, we can rewrite \(b + c\) as \(c + b\). Therefore, the assumption \(a < b + c\) is equivalent to \(a < c + b\).

Next, we use the theorem that for any integers \(a\), \(b\), and \(c\), if \(a < c + b\), then \(-c + a < b\). Since we have \(a < c + b\) from the previous step, this theorem directly implies that \(-c + a < b\).

Thus, we have shown that if \(a < b + c\), then \(-c + a < b\). This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example {a b c : Int} (h : a < b + c) : -c + a < b := by sorry

4. **Prefix**
import Init.Data.Int.Lemmas
import Init.ByCases
import Init.Data.Int.Order

open Int
open Nat

example {a b c : Int} (h : a < b + c) : -c + a < b := by

5. **Header Information**  
-- Init.Data.Int.Lemmas not found. --

-- Init.ByCases not found. --

-- Init.Data.Int.Order not found. --

