
1. **Informal Theorem**  
Subtraction on the Left Implies Addition on the Right in Integers: \(a < b + c \to a - b < c\) : For any integers \(a\), \(b\), and \(c\), if \(a < b + c\), then \(a - b < c\).

2. **Informal Proof**  
We start with the given inequality \(a < b + c\). To prove that \(a - b < c\), we first use the property that adding the same element to both sides of a strict inequality preserves the inequality. Specifically, since \(a < b + c\), we have:
\[
a + (-b) < (b + c) + (-b)
\]
Next, we use the commutativity of addition to rewrite \((b + c) + (-b)\) as \((c + b) + (-b)\). Then, we use the property of additive inverses to simplify \((c + b) + (-b)\) to \(c\). Therefore, the inequality \(a + (-b) < (b + c) + (-b)\) simplifies to:
\[
a + (-b) < c
\]
This is exactly the same as:
\[
a - b < c
\]
Thus, we have shown that if \(a < b + c\), then \(a - b < c\). This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example {a b c : Int} (h : a < b + c) : a - b < c := by sorry

4. **Prefix**
import Init.Data.Int.Lemmas
import Init.ByCases
import Init.Data.Int.Order

open Int
open Nat

example {a b c : Int} (h : a < b + c) : a - b < c := by

5. **Header Information**  
-- Init.Data.Int.Lemmas not found. --

-- Init.ByCases not found. --

-- Init.Data.Int.Order not found. --

