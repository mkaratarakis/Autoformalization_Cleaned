
1. **Informal Theorem**  
Product of Positive and Negative Integers is Negative: \(0 < a\) and \(b < 0\) implies \(a \cdot b < 0\) : For any integers \(a\) and \(b\), if \(0 < a\) and \(b < 0\), then \(a \cdot b < 0\).

2. **Informal Proof**  
We start by noting that if \( 0 < a \) and \( b < 0 \), we need to show that \( a \cdot b < 0 \).

1. First, we construct a lemma \( h \) that states \( a \cdot b < a \cdot 0 \). This follows from the fact that if \( b < 0 \) and \( 0 < a \), then multiplying both sides of the inequality \( b < 0 \) by the positive integer \( a \) preserves the inequality, i.e., \( a \cdot b < a \cdot 0 \).

2. Next, we use the property that the product of any integer with zero is zero, i.e., \( a \cdot 0 = 0 \). By substituting \( a \cdot 0 \) with \( 0 \) in the lemma \( h \), we get \( a \cdot b < 0 \). This is exactly the goal we need to prove.

Thus, we have shown that if \( 0 < a \) and \( b < 0 \), then \( a \cdot b < 0 \). This completes the proof. \(\blacksquare\)

3. **Formal Theorem**  
example {a b : Int} (ha : 0 < a) (hb : b < 0) : a * b < 0 := by sorry

4. **Prefix**
import Init.Data.Int.Lemmas
import Init.ByCases
import Init.Data.Int.Order

open Int
open Nat

example {a b : Int} (ha : 0 < a) (hb : b < 0) : a * b < 0 := by

5. **Header Information**  
-- Init.Data.Int.Lemmas not found. --

-- Init.ByCases not found. --

-- Init.Data.Int.Order not found. --

