
1. **Informal Theorem**  
Erase First Occurrence Equals Filter for Unique Lists: \( l.\text{erase}(a) = \text{filter}(\lambda x. x \neq a, l) \) for \( l \) with no duplicates : For any list \( l \) of elements of type \( \alpha \) that has no duplicate elements (i.e., \( l \) is a list with unique elements), and for any element \( a \) of type \( \alpha \), the list obtained by erasing the first occurrence of \( a \) from \( l \) is equal to the list obtained by filtering out all occurrences of \( a \) from \( l \). Formally, if \( l \) is a list with no duplicates, then \( l.\text{erase}(a) = \text{filter}(\lambda x. x \neq a, l) \).

2. **Informal Proof**  
We start by noting that the assumption that the cardinality of \( n \) is zero is equivalent to \( n \) being empty. Therefore, we convert the assumption \( \text{card}(n) = 0 \) into \( n \) is empty.

To prove that the determinant of \( M \) is \( 1 \), it suffices to show that \( M = 1 \) (the identity matrix). Using extensionality, we only need to show that \( M i = 1 i \) for every \( i \in n \).

Since \( n \) is empty, the statement \( M i = 1 i \) holds for every \( i \in n \) vacuously. Therefore, \( M = 1 \), and the determinant of \( M \) is \( \det M = \det 1 = 1 \).

This completes the proof.

3. **Formal Theorem**  
example [LawfulBEq α] {l} (d : Nodup l) (a : α) : l.erase a = l.filter (· != a) := by sorry

4. **Prefix**
import Init.Data.List.Pairwise
import Init.Data.List.Erase

open List
open Nodup
open Nat
variable [BEq α]

example [LawfulBEq α] {l} (d : Nodup l) (a : α) : l.erase a = l.filter (· != a) := by

5. **Header Information**  
-- Init.Data.List.Pairwise not found. --

-- Init.Data.List.Erase not found. --

