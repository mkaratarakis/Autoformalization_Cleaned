
1. **Informal Theorem**  
Equation of Addition and Subtraction in Natural Numbers: \(a = b + c \leftrightarrow b = a - c\) when \(c \leq a\) : For any natural numbers \(a\), \(b\), and \(c\), if \(c \leq a\), then the equation \(a = b + c\) holds if and only if \(b = a - c\).

2. **Informal Proof**  
We start with the goal of proving that \(a = b + c\) is equivalent to \(b = a - c\) under the assumption that \(c \leq a\).

1. **Symmetry of Equality:**
Since the equality relation is symmetric, we can rewrite the goal \(a = b + c\) as \(b + c = a\). Therefore, it suffices to show that \(b + c = a\) is equivalent to \(b = a - c\).

2. **Application of a Known Theorem:**
We use the theorem that for any natural numbers \(a\), \(b\), and \(c\), if \(b \leq c\), then \(a + b = c\) holds if and only if \(a = c - b\). In our case, we have \(c \leq a\), so we can apply this theorem directly.

Specifically, the theorem states that \(b + c = a\) if and only if \(b = a - c\).

Thus, the proof is complete, and we have shown that \(a = b + c\) if and only if \(b = a - c\) when \(c \leq a\).

3. **Formal Theorem**  
example {a : Nat} (b : Nat) {c : Nat} (h : c ≤ a) : (a = b + c) = (b = a - c) := by sorry

4. **Prefix**
import Init.Data.Bool
import Init.Data.Nat.Basic
import Init.Data.Nat.Lemmas
import Init.Data.Nat.Simproc

open Nat
open Simproc


example {a : Nat} (b : Nat) {c : Nat} (h : c ≤ a) : (a = b + c) = (b = a - c) := by

5. **Header Information**  
-- Init.Data.Bool not found. --

-- Init.Data.Nat.Basic not found. --

-- Init.Data.Nat.Lemmas not found. --

-- Init.Data.Nat.Simproc not found. --

